Module main()
   // Constant for the array size
   Constant Integer SIZE = 6
   
   // An array of strings
   Declare String names[SIZE] = "David", "Abe", "Megan",
                                "Beth", "Jeff", "Daisy"
   
   // Loop counter
   Declare Integer index

   // Display the array in its original order.
   Display "Original order:"
   For index = 0 To SIZE - 1
      Display names[index]
   End For
   
   // Sort the names.
   Call bubbleSort(names, SIZE)
   
   // Display a blank line.
   Display
   
   // Display the sorted array.
   Display "Sorted order:"
   For index = 0 To SIZE - 1
      Display names[index]
   End For
End Module

// The bubbleSort module accepts an array of Strings
// and the array's size as arguments. When the module
// is finished, the values in the array will be sorted
// in ascending order.
Module bubbleSort(String Ref array[], Integer arraySize)
   // The maxElement variable will contain the subscript
   // of the last element in the array to compare.
   Declare Integer maxElement
   
   // The index variable will be used as a counter
   // in the inner loop.
   Declare Integer index
   
   // The outer loop positions maxElement at the last
   // element to compare during each pass through the
   // array. Initially maxElement is the index of the
   // last element in the array. During each iteration,
   // it is decreased by one.
   For maxElement = arraySize - 1 To 0 Step - 1
      
      // The inner loop steps through the array, comparing
      // each element with its neighbor. All of the 
      // elements from index 0 through maxElement are
      // involved in the comparison. If two elements are
      // out of order, they are swapped.
      For index = 0 To maxElement - 1

         // Compare an element with its neighbor and swap
         // if necessary.
         If array[index] < array[index + 1] Then
            Call swap(array[index], array[index + 1])
         End If
      End For
   End For
End Module

// The swap module accepts two String arguments
// and swaps their contents.
Module swap(String Ref a, String Ref b)
   // Local variable for temporary storage.
   Declare String temp
   
   // Swap the values in a and b.
   Set temp = a
   Set a = b
   Set b = temp
End Module